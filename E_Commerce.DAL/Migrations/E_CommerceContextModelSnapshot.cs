// <auto-generated />
using System;
using E_Commerce.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce.DAL.Migrations
{
    [DbContext(typeof(E_CommerceContext))]
    partial class E_CommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("E_Commerce.DAL.Cart", b =>
                {
                    b.Property<Guid>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            CartId = new Guid("100dbd14-b12c-4cac-9c35-2bf2978457fd"),
                            CustomerId = new Guid("c7d3e80a-7a4a-4c54-91a6-89c0df051c94")
                        },
                        new
                        {
                            CartId = new Guid("9ddafd60-411a-4a3f-8bd2-7f8b6dfa6fb8"),
                            CustomerId = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992bb7")
                        },
                        new
                        {
                            CartId = new Guid("211560d9-2bd1-4dfb-a9ea-7c0a20298356"),
                            CustomerId = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992bb8")
                        },
                        new
                        {
                            CartId = new Guid("1f100372-ef3c-4170-98cc-130c19d5e034"),
                            CustomerId = new Guid("e23edc32-bd6a-4b6b-a28e-ccf60b5c32dc")
                        },
                        new
                        {
                            CartId = new Guid("465e0713-f748-43be-b742-d8a79015c95d"),
                            CustomerId = new Guid("f0e7f09e-c7ad-4cb0-8f19-6540b4c7c49f")
                        },
                        new
                        {
                            CartId = new Guid("41c81de1-4a13-4e94-8eff-60bcb45a7a06"),
                            CustomerId = new Guid("22ac8dc9-4385-48ae-90a3-7d8c898c6d5d")
                        },
                        new
                        {
                            CartId = new Guid("fac7ec72-bdff-4a99-af92-05226aebaaa4"),
                            CustomerId = new Guid("b6a76b15-33e5-4d26-98b9-c948c7823b84")
                        },
                        new
                        {
                            CartId = new Guid("2315596f-aa3b-4afc-b352-34593a4b68aa"),
                            CustomerId = new Guid("0e67a2e5-df53-4a92-9854-8e1ad46a4e61")
                        },
                        new
                        {
                            CartId = new Guid("5e6cebb2-7820-4b9d-ba7f-8e6e59383630"),
                            CustomerId = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992b58")
                        },
                        new
                        {
                            CartId = new Guid("3aa55686-6a15-424f-bd20-f60288e2b2f9"),
                            CustomerId = new Guid("724587e6-9314-4fe6-9c3e-6fd612f50234")
                        },
                        new
                        {
                            CartId = new Guid("98874aa6-3a4c-46a5-8331-2ddcd75dd27a"),
                            CustomerId = new Guid("234cdf89-12a3-45b6-789c-0123456789de")
                        },
                        new
                        {
                            CartId = new Guid("be7b9194-73c1-4d4b-8311-186f992c4db6"),
                            CustomerId = new Guid("6789abcd-ef01-2345-6789-abcd01234567")
                        },
                        new
                        {
                            CartId = new Guid("147ac894-adc1-4a0f-87f5-4cc4221c8a00"),
                            CustomerId = new Guid("bcdef012-3456-789a-bcde-f01234567890")
                        },
                        new
                        {
                            CartId = new Guid("eab5d508-d784-4c18-9924-0a01f612b769"),
                            CustomerId = new Guid("2345cdef-0123-4567-89ab-cdef01234567")
                        },
                        new
                        {
                            CartId = new Guid("e1b0f2e8-fa91-442a-a1dd-407e774d7558"),
                            CustomerId = new Guid("8901def0-1234-5678-9abc-def012345678")
                        },
                        new
                        {
                            CartId = new Guid("ceddf5ed-2c68-4f7b-bfe2-343f747e8ac0"),
                            CustomerId = new Guid("23456789-01ab-cdef-0123-456789abcdef")
                        },
                        new
                        {
                            CartId = new Guid("a8b91928-5edd-455e-a8f1-791bfd3fef52"),
                            CustomerId = new Guid("def01234-5678-9abc-def0-123456789abc")
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.CartProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CartId", "Size", "Color");

                    b.HasIndex("CartId");

                    b.ToTable("CartProduct");
                });

            modelBuilder.Entity("E_Commerce.DAL.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583"),
                            Description = "Men's Clothing",
                            Image = "men.jpg",
                            Name = "Men"
                        },
                        new
                        {
                            Id = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d"),
                            Description = "Women's Clothing",
                            Image = "Women.jpg",
                            Name = "Women"
                        },
                        new
                        {
                            Id = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f"),
                            Description = "Kids's Clothing",
                            Image = "Kids.jpg",
                            Name = "Kids"
                        },
                        new
                        {
                            Id = new Guid("f032f788-2340-431f-9f8f-eeb176a35177"),
                            Description = "Mens shirts's Clothing",
                            Image = "men shirts.jpg",
                            Name = "Shirts",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("a6c4de53-33c5-48e1-9f21-5649726d3a3d"),
                            Description = "Women shirts's Clothing",
                            Image = "Women shirts.jpg",
                            Name = "Shirts",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("8a6d4a19-47cc-4a4e-822b-cac1de2efc8d"),
                            Description = "Kids shirts's Clothing",
                            Image = "Kids shirts.jpg",
                            Name = "Shirts",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("9a938bc1-0717-4b8d-8f8b-3a2f55de49db"),
                            Description = "Men Pants's Clothing",
                            Image = "men Pants.jpg",
                            Name = "Pants",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("d9f02e92-d14c-4b6d-86ad-6e4e6c48020a"),
                            Description = "Women Pants's Clothing",
                            Image = "Women Pants.jpg",
                            Name = "Pants",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("1d53debe-03e6-487f-9b34-6b26c68fc1e5"),
                            Description = "Kids Pants's Clothing",
                            Image = "Kids Pants.jpg",
                            Name = "Pants",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("6b3c4ef5-01ad-49c7-a8ff-36ae55d0ce8d"),
                            Description = "Men Shoes's Clothing",
                            Image = "men Shoes.jpg",
                            Name = "Shoes",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("35b303b9-25a0-4379-89b3-64e4ae51291f"),
                            Description = "Women Shoes's Clothing",
                            Image = "Women Shoes.jpg",
                            Name = "Shoes",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("ca09f6a1-5b87-4b56-9ee3-c6fb6ad070c2"),
                            Description = "Kids Shoes's Clothing",
                            Image = "Kids Shoes.jpg",
                            Name = "Shoes",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("6f6c6c4c-9e6e-4e0c-97cc-8b52c055918b"),
                            Description = "Men Jackets's Clothing",
                            Image = "men Jackets.jpg",
                            Name = "Jackets",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("47a38a48-8747-4461-ba32-7e573be663ee"),
                            Description = "Women Jackets's Clothing",
                            Image = "Women Jackets.jpg",
                            Name = "Jackets",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("b19a53a3-04e7-4804-84bc-84da64d738a6"),
                            Description = "Kids Jackets's Clothing",
                            Image = "Kids Jackets.jpg",
                            Name = "Jackets",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        },
                        new
                        {
                            Id = new Guid("a6d7e8b5-2f4d-4f51-b24b-4fcb52e36f5f"),
                            Description = "Men Hoodies's Clothing",
                            Image = "men Hoodies.jpg",
                            Name = "Hoodies",
                            ParentCategoryId = new Guid("edc6b9e0-9252-4e9d-b4d3-9203b6de2583")
                        },
                        new
                        {
                            Id = new Guid("e18e42b7-799e-4b3b-a084-c55d4bb5da3f"),
                            Description = "Women Hoodies's Clothing",
                            Image = "Women Hoodies.jpg",
                            Name = "Hoodies",
                            ParentCategoryId = new Guid("a6c4de53-33c5-48e1-9f21-5649726d2a3d")
                        },
                        new
                        {
                            Id = new Guid("c2ae51c9-913a-4e7d-a7b5-ef1efc8f9d3e"),
                            Description = "Kids Hoodies's Clothing",
                            Image = "Kids Hoodies.jpg",
                            Name = "Hoodies",
                            ParentCategoryId = new Guid("52d40b0a-7039-4bc6-899d-0c36adff6b8f")
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.CustomerReview", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersReviews");
                });

            modelBuilder.Entity("E_Commerce.DAL.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderData")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7d3e80a-7a4a-4c54-91a6-89c0df051c94"),
                            ArrivalDate = new DateTime(2029, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Iraq",
                            CustomerId = "07d96ed8-155d-49c7-a77a-615f109d77c3",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2029, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "567 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("6789abcd-ef01-2345-6789-abcd01234567"),
                            ArrivalDate = new DateTime(2029, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Seattle",
                            Country = "Libya",
                            CustomerId = "c7d3e80a-7a4a-4c54-91a6-89c0df051c94",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2029, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "789 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("8901def0-1234-5678-9abc-def012345678"),
                            ArrivalDate = new DateTime(2029, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Francisco",
                            Country = "Afghanistan",
                            CustomerId = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb7",
                            Discount = 0.0,
                            OrderData = new DateTime(2029, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Unpaid",
                            Street = "123 Pine St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("b6a76b15-33e5-4d26-98b9-c948c7823b84"),
                            ArrivalDate = new DateTime(2029, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Los Angeles",
                            Country = "Andorra",
                            CustomerId = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb8",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2029, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "456 Maple Ave",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("07d96ed8-155d-49c7-a77a-615f109d77c3"),
                            ArrivalDate = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Zimbabwe",
                            CustomerId = "e23edc32-bd6a-4b6b-a28e-ccf60b5c32dc",
                            Discount = 1.0,
                            OrderData = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "789 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("07d96ed8-155d-49c7-a77a-615f109d75c3"),
                            ArrivalDate = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Zimbabwe",
                            CustomerId = "b6a76b15-33e5-4d26-98b9-c948c7823b84",
                            Discount = 1.0,
                            OrderData = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "789 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("0e67a2e5-df53-4a92-9854-8e1ad46a4e61"),
                            ArrivalDate = new DateTime(2027, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New York",
                            Country = "Belgium",
                            CustomerId = "0e67a2e5-df53-4a92-9854-8e1ad46a4e61",
                            Discount = 0.0,
                            OrderData = new DateTime(2027, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Unpaid",
                            Street = "123 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("22ac8dc9-4385-48ae-90a3-7d8c898c6d5d"),
                            ArrivalDate = new DateTime(2027, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Los Angeles",
                            Country = "Belize",
                            CustomerId = "74f5b2b3-3d10-4a85-93b5-8c6d0c992b58",
                            Discount = 0.5,
                            OrderData = new DateTime(2027, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Shipped",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "456 Main St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("f0e7f09e-c7ad-4cb0-8f19-6540b4c7c49f"),
                            ArrivalDate = new DateTime(2029, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Canada",
                            CustomerId = "724587e6-9314-4fe6-9c3e-6fd612f50234",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2028, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Unpaid",
                            Street = "789 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("23456789-01ab-cdef-0123-456789abcdef"),
                            ArrivalDate = new DateTime(2027, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Francisco",
                            Country = "Oman",
                            CustomerId = "234cdf89-12a3-45b6-789c-0123456789de",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2027, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "321 Maple Ave",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("2345cdef-0123-4567-89ab-cdef11234567"),
                            ArrivalDate = new DateTime(2027, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Seattle",
                            Country = "Taiwan",
                            CustomerId = "6789abcd-ef01-2345-6789-abcd01234567",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2027, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "567 Pine St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("def01234-5678-9abc-def0-113456789abc"),
                            ArrivalDate = new DateTime(2028, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Miami",
                            Country = "Fiji",
                            CustomerId = "bcdef012-3456-789a-bcde-f01234567890",
                            Discount = 0.29999999999999999,
                            OrderData = new DateTime(2028, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "901 Cherry Ln",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("e23edc32-bd6a-4b6b-a28e-ccf90b5c32dc"),
                            ArrivalDate = new DateTime(2028, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Boston",
                            Country = "Denmark",
                            CustomerId = "2345cdef-0123-4567-89ab-cdef01234567",
                            Discount = 0.14999999999999999,
                            OrderData = new DateTime(2028, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "246 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("f0e7f09e-c7ad-4cb0-8f19-6540b5c7c49f"),
                            ArrivalDate = new DateTime(2029, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Chicago",
                            Country = "Canada",
                            CustomerId = "8901def0-1234-5678-9abc-def012345678",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2029, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Unpaid",
                            Street = "789 Elm St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("724587e6-9314-4fe6-9c3e-7fd612f50234"),
                            ArrivalDate = new DateTime(2029, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Dallas",
                            Country = "Samoa",
                            CustomerId = "b6a76b15-33e5-4d26-98b9-c948c7823b84",
                            Discount = 0.10000000000000001,
                            OrderData = new DateTime(2029, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "987 Cedar St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("74f5b2b3-3d10-4a85-93b5-8c6d0c992b58"),
                            ArrivalDate = new DateTime(2029, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Diego",
                            Country = "Samoa",
                            CustomerId = "bcdef012-3456-789a-bcde-f01234567890",
                            Discount = 0.0,
                            OrderData = new DateTime(2029, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Unpaid",
                            Street = "456 Oak St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("724587e6-9314-4fe6-9c3e-7fd612f50233"),
                            ArrivalDate = new DateTime(2029, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Seattle",
                            Country = "Samoa",
                            CustomerId = "c7d3e80a-7a4a-4c54-91a6-89c0df051c94",
                            Discount = 0.20000000000000001,
                            OrderData = new DateTime(2029, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Processing",
                            PaymentMethod = "CashOnDelivery",
                            PaymentStatus = "Paid",
                            Street = "789 Pine St",
                            TotalPrice = 0m
                        },
                        new
                        {
                            Id = new Guid("724587e6-9314-4fe6-9c3e-7fd612f50232"),
                            ArrivalDate = new DateTime(2029, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "San Francisco",
                            Country = "Senegal",
                            CustomerId = "def01234-5678-9abc-def0-123456789abc",
                            Discount = 0.29999999999999999,
                            OrderData = new DateTime(2029, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = "Pending",
                            PaymentMethod = "CreditCard",
                            PaymentStatus = "Paid",
                            Street = "123 Maple Ave",
                            TotalPrice = 0m
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.OrderProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OrderId", "Color", "Size");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d77b647-a189-400b-9cda-a517d5959aff"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("26d7f035-0769-41dd-aa02-5fd2e2171907"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("7d0728c2-c3b6-423f-80d8-81a6f514e13e"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("86d77404-4901-434e-b670-8b21ea372668"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("2eb4ae6c-1885-4e4b-aed1-7af817ad628e"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c69fa6f2-dd53-4282-88b5-1f104409e53b"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("3eab08e1-d781-4dac-b509-e831dfac9db3"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0499bf6a-30c3-4d74-9c6d-c5480400adcb"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("147531a1-3228-4264-b61e-4c54d4f5ad69"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("50d74f21-a83c-4105-bb32-cce361166504"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("273e896f-5caf-462b-9e7f-2c25157a3bf4"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("f872333d-7411-4766-bda1-959054116508"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("cb520136-0dd0-4123-b548-0cc28a0170f9"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("db9c2922-4193-4879-b3af-9b3df51c83da"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("333e504c-0b52-4d02-8174-8986ded54bbc"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("69fc24e1-97c4-461a-98ab-3cddf2caef47"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("fff4088c-b21e-4522-b9f9-5be4e406af2e"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c63e6247-1a2d-4794-ba28-83d48e2080e0"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("256a73f6-aa9f-413d-a3a6-39cfdde086df"),
                            Description = "Warm hoodie for men",
                            Discount = 0.05m,
                            Name = "Men's Hoodie",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("80e39c41-5e30-47ec-8ee8-866572e95aaf"),
                            Description = "Comfortable cotton t-shirt for men",
                            Discount = 0m,
                            Name = "Men's T-Shirt",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("2575a1a0-4791-49be-9d3b-d14316ebfae8"),
                            Description = "Elegant dress for women",
                            Discount = 0.1m,
                            Name = "Women's Dress",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("9011c450-38e3-4757-9f05-33a35d230040"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("f8ae15e9-11f1-43f6-ba5c-4931873b541e"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("a26fb055-1dea-4eee-997c-75f091f4a328"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("36ef4e33-0da9-4817-8861-42a7d246250b"),
                            Description = "Colorful shoes for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shoes",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e94e473a-4373-4a5c-8f03-6db494480603"),
                            Description = "Classic denim jeans for men",
                            Discount = 0.05m,
                            Name = "Men's Jeans",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("b757424f-02ff-4da5-b044-88b872d5919a"),
                            Description = "Stylish blouse for women",
                            Discount = 0m,
                            Name = "Women's Blouse",
                            Price = 24.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6981cb97-d9f5-451d-a15c-f85e0e9fdfa0"),
                            Description = "Spacious backpack for kids",
                            Discount = 0m,
                            Name = "Kids' Backpack",
                            Price = 19.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("ff521906-e932-4b9e-85a4-5ca600a95722"),
                            Description = "Spacious backpack for kids",
                            Discount = 0m,
                            Name = "Kids' Backpack",
                            Price = 19.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("733c0337-85da-4e2c-b636-2bbc7a68942e"),
                            Description = "Casual shorts for men",
                            Discount = 0.1m,
                            Name = "Men's Shorts",
                            Price = 17.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("ab767be9-2d06-44fe-9532-99087c353b3a"),
                            Description = "Comfortable sandals for women",
                            Discount = 0.2m,
                            Name = "Women's Sandals",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6640972c-43dc-432e-bc74-92e3579f0ab8"),
                            Description = "Adorable t-shirt for kids",
                            Discount = 0m,
                            Name = "Kids' T-Shirt",
                            Price = 12.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("1a1f3c3d-923b-48c0-9b9a-80cf0493585b"),
                            Description = "Stylish sneakers for men",
                            Discount = 0.15m,
                            Name = "Men's Sneakers",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4e769d77-8738-4ecd-9373-81e73627abd2"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("536d7a11-8cfb-4890-bd3d-e5cd93eb0f8a"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("ba89acdd-5922-4a61-be94-5c8b87b6eef2"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("89a06fa9-a046-49bf-bdcc-cb1a66bf6455"),
                            Description = "Fashionable skirt for women",
                            Discount = 0m,
                            Name = "Women's Skirt",
                            Price = 27.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("1d15f440-2786-47d3-a0c0-e7e5e3cfc7a7"),
                            Description = "Warm jacket for kids",
                            Discount = 0.1m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("157deed6-ced6-46ea-879a-e15d0bbc07bf"),
                            Description = "Classic polo shirt for men",
                            Discount = 0m,
                            Name = "Men's Polo Shirt",
                            Price = 22.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("5a27f5dc-8096-4898-aff3-8f704df1b80d"),
                            Description = "Stylish denim jeans for women",
                            Discount = 0.05m,
                            Name = "Women's Jeans",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("ca3cb2ab-7f6b-4095-978c-3b8b5dbf4911"),
                            Description = "Cute dress for kids",
                            Discount = 0m,
                            Name = "Kids' Dress",
                            Price = 32.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c4308eac-26e9-4528-989e-1b191d6bbed2"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("69ec1a9f-9fed-45f3-baf2-fd0937c4a80b"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("25219121-5bd9-4f35-8ea2-2cd8e1b7a485"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("3a02b618-0d21-452d-ae66-0c1920883912"),
                            Description = "Warm jacket for men",
                            Discount = 0.2m,
                            Name = "Men's Jacket",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("709d833b-2c34-4f18-9511-a571edd734c6"),
                            Description = "Sporty sneakers for women",
                            Discount = 0m,
                            Name = "Women's Sneakers",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("50192eed-1aa1-4b29-82d7-3515fdc6aff3"),
                            Description = "Casual trousers for kids",
                            Discount = 0.1m,
                            Name = "Kids' Trousers",
                            Price = 21.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("50019367-4043-49d8-a155-ecaa13bf5e97"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("158bf75d-8e27-43c1-9135-7713adb12ba8"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e809c2b2-bd14-406c-871e-19070cc26780"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("94e3840f-0330-4acb-8fdd-928910f5ea8e"),
                            Description = "Formal shirt for men",
                            Discount = 0.15m,
                            Name = "Men's Shirt",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("1d0ddc3b-1267-4ea3-8a02-6df96fa9e142"),
                            Description = "Stylish jacket for women",
                            Discount = 0m,
                            Name = "Women's Jacket",
                            Price = 54.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0629761c-f56e-462f-9c74-cfb4251f8b7b"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("328f1609-4db1-4962-b8d6-32a1d47f73de"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("79bc6c6a-40fe-485c-8e56-414cbfe4985b"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("18794c59-9e41-46fd-8df4-5b83a4e92888"),
                            Description = "Cozy hoodie for kids",
                            Discount = 0m,
                            Name = "Kids' Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("fb202ddc-9edc-4377-ae3c-e98baf06f0cc"),
                            Description = "Warm sweater for men",
                            Discount = 0.1m,
                            Name = "Men's Sweater",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("18fe0d6a-e96a-4120-b180-a5a235c47848"),
                            Description = "Elegant blazer for women",
                            Discount = 0.2m,
                            Name = "Women's Blazer",
                            Price = 59.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("fb2328ed-ee14-4d0d-92f6-ed685666f31e"),
                            Description = "Casual shorts for kids",
                            Discount = 0m,
                            Name = "Kids' Shorts",
                            Price = 15.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("edb45cda-dd29-4caf-badf-fe9c0dabf26a"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("37036ea1-47d2-4f69-82b2-444f2db7e0e3"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("56b03b73-fedc-427b-85d2-fc8dfded99bc"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4ad85a37-b5fc-4ab1-b613-70a473125d52"),
                            Description = "Classic pants for men",
                            Discount = 0.1m,
                            Name = "Men's Pants",
                            Price = 49.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("08e748cd-46c3-4c88-823b-c0d358225fda"),
                            Description = "Cozy sweater for women",
                            Discount = 0m,
                            Name = "Women's Sweater",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("398a6d0c-b221-4372-9967-4819f7ba299c"),
                            Description = "Adorable shirt for kids",
                            Discount = 0.15m,
                            Name = "Kids' Shirt",
                            Price = 17.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0e79bf11-f62e-4e58-9919-a6367244eafe"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("53a4d620-0335-4be7-87b8-4f0e47ce713d"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("257080cd-8cf9-48ac-9bf5-fcaff7256993"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("7bda3943-83fb-4f5f-8c18-d00e77f89676"),
                            Description = "Comfortable hoodie for men",
                            Discount = 0m,
                            Name = "Men's Hoodie",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("25bfd950-ea7b-4b2a-be40-a73c756d14f0"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("a0b552d6-9f85-40d4-9c64-9621f28e4079"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6d8f8c57-d4c5-4516-997f-e89bafa53b37"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4df96f8b-0a80-433c-a5d6-f495914b79bf"),
                            Description = "Stylish pants for women",
                            Discount = 0.05m,
                            Name = "Women's Pants",
                            Price = 44.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("6da4efb8-20d5-4a96-918f-39e14c968254"),
                            Description = "Warm sweater for kids",
                            Discount = 0m,
                            Name = "Kids' Sweater",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e55b5007-0353-4d62-94b5-46aad47ec69b"),
                            Description = "Warm sweater for kids",
                            Discount = 0m,
                            Name = "Kids' Sweater",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("0bc2723a-0cab-4536-a8ee-1fe94e497b72"),
                            Description = "Sporty sneakers for men",
                            Discount = 0.1m,
                            Name = "Men's Sneakers",
                            Price = 54.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("af0514b8-b690-48be-89a7-1e174964420c"),
                            Description = "Sporty sneakers for men",
                            Discount = 0.1m,
                            Name = "Men's Sneakers",
                            Price = 54.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("2109a4c6-aec6-40ae-abd6-0076fbe8a11b"),
                            Description = "Casual t-shirt for women",
                            Discount = 0.2m,
                            Name = "Women's T-Shirt",
                            Price = 19.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("4862ff1b-38fe-42a3-b2c3-d9e6a8f0db6a"),
                            Description = "Stylish jacket for kids",
                            Discount = 0m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("e11480dd-4069-4f65-addd-f8f5b181d33a"),
                            Description = "Stylish jacket for kids",
                            Discount = 0m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("9508dcc4-4966-42a2-a930-b0e8cd7ce089"),
                            Description = "Stylish jacket for kids",
                            Discount = 0m,
                            Name = "Kids' Jacket",
                            Price = 39.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("08aa994c-6a3a-4c9c-aaaf-c82b62e5c5ff"),
                            Description = "Comfortable shorts for men",
                            Discount = 0m,
                            Name = "Men's Shorts",
                            Price = 24.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("72eae71d-213a-4310-a855-7716273daa06"),
                            Description = "Fashionable sandals for women",
                            Discount = 0.1m,
                            Name = "Women's Sandals",
                            Price = 29.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("121ab62a-5940-4d34-97c7-3da72e869ccd"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("c279cd78-923f-476a-b4ed-5f8b02e29038"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers2",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("dd238258-3c01-4fb3-9990-4e5e49a75fdb"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers3",
                            Price = 34.99m,
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("7642bee8-94f1-4f88-b8cf-eb00ae711575"),
                            Description = "Stylish trousers for kids",
                            Discount = 0.05m,
                            Name = "Kids' Trousers4",
                            Price = 34.99m,
                            Rate = 0m
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.ProductColorSizeQuantity", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "Color", "Size");

                    b.ToTable("ProductsInfo");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product_IMG", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductID", "ImageURL");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ProductID = new Guid("7d77b647-a189-400b-9cda-a517d5959aff"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("26d7f035-0769-41dd-aa02-5fd2e2171907"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("7d0728c2-c3b6-423f-80d8-81a6f514e13e"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("86d77404-4901-434e-b670-8b21ea372668"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("2eb4ae6c-1885-4e4b-aed1-7af817ad628e"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("c69fa6f2-dd53-4282-88b5-1f104409e53b"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("3eab08e1-d781-4dac-b509-e831dfac9db3"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("0499bf6a-30c3-4d74-9c6d-c5480400adcb"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("147531a1-3228-4264-b61e-4c54d4f5ad69"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("50d74f21-a83c-4105-bb32-cce361166504"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        },
                        new
                        {
                            ProductID = new Guid("273e896f-5caf-462b-9e7f-2c25157a3bf4"),
                            ImageURL = "https://townteam.com/cdn/shop/files/SSH23SAER19684TM1-Multicolor-3_600x.jpg?v=1684071642"
                        });
                });

            modelBuilder.Entity("E_Commerce.DAL.WishList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductWishList", b =>
                {
                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WishListsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductsId", "WishListsId");

                    b.HasIndex("WishListsId");

                    b.ToTable("ProductWishList");
                });

            modelBuilder.Entity("E_Commerce.DAL.Customer", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<decimal?>("CardNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CartID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MidName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NameOnCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WishListID")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("CartID")
                        .IsUnique()
                        .HasFilter("[CartID] IS NOT NULL");

                    b.HasIndex("WishListID")
                        .IsUnique()
                        .HasFilter("[WishListID] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Customer");

                    b.HasData(
                        new
                        {
                            Id = "07d96ed8-155d-49c7-a77a-615f109d77c3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a55f79f3-d046-4e00-a97c-3cb9eeb6bb2e",
                            Email = "johndoe@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "123-456-7890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "934bf199-d5d7-4779-bda4-ac4e7dbdd88d",
                            TwoFactorEnabled = false,
                            CardNumber = 1234567890123456m,
                            City = "New York",
                            Country = "Ukraine",
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe",
                            MidName = "E",
                            NameOnCard = " John E Doe",
                            Role = "User",
                            Street = "123 Main St"
                        },
                        new
                        {
                            Id = "c7d3e80a-7a4a-4c54-91a6-89c0df051c94",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c6154eb4-ea7e-4489-9fce-bed5b32874f1",
                            Email = "janesmith@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-9999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "54e7fa26-2265-4183-ac4a-da86b4a9b34c",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543210987654m,
                            City = "Los Angeles",
                            Country = "Turkey",
                            ExpireDate = new DateTime(2025, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            LastName = "Smith",
                            MidName = "A",
                            NameOnCard = " Jane A Smith",
                            Role = "User",
                            Street = "456 Elm St"
                        },
                        new
                        {
                            Id = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7ba0a8e3-8534-4ad6-98c2-e742f6b72b88",
                            Email = "emilyanderson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c07157ee-f856-480f-892d-35280e9a5698",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543210123456m,
                            City = "San Francisco",
                            Country = "Australia",
                            ExpireDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emily",
                            LastName = "Anderson",
                            MidName = "R",
                            NameOnCard = "Emily R Anderson",
                            Role = "User",
                            Street = "789 Elm St"
                        },
                        new
                        {
                            Id = "74f5b2b3-3d10-4a85-93b5-8c6d0c992bb8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "604f84a8-f580-4510-a7af-851715bf6f4f",
                            Email = "michaelwilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "444-555-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b54d8799-18a1-4665-bffc-2eb19a5d7b0c",
                            TwoFactorEnabled = false,
                            CardNumber = 1234987654321098m,
                            City = "London",
                            Country = "Albania",
                            ExpireDate = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            LastName = "Wilson",
                            MidName = "J",
                            NameOnCard = "Michael J Wilson",
                            Role = "User",
                            Street = "456 Maple Ave"
                        },
                        new
                        {
                            Id = "e23edc32-bd6a-4b6b-a28e-ccf60b5c32dc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7cbeea0b-32d3-4357-ab9d-f936e225fe95",
                            Email = "sarahthompson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-777-8888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b2e2a131-cb33-4944-948c-a0be3217644a",
                            TwoFactorEnabled = false,
                            CardNumber = 9876012345678901m,
                            City = "Sydney",
                            Country = "Australia",
                            ExpireDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sarah",
                            LastName = "Thompson",
                            MidName = "L",
                            NameOnCard = "Sarah L Thompson",
                            Role = "User",
                            Street = "789 Pine St"
                        },
                        new
                        {
                            Id = "f0e7f09e-c7ad-4cb0-8f19-6540b4c7c49f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "019bb0c9-6a7d-4513-85b6-b6adafde1600",
                            Email = "davidmiller@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "999-888-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8faef54c-8727-4213-9817-e39f46711b70",
                            TwoFactorEnabled = false,
                            CardNumber = 5432109876543210m,
                            City = "Toronto",
                            Country = "Canada",
                            ExpireDate = new DateTime(2025, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "David",
                            LastName = "Miller",
                            MidName = "M",
                            NameOnCard = "David M Miller",
                            Role = "User",
                            Street = "123 Oak Ave"
                        },
                        new
                        {
                            Id = "22ac8dc9-4385-48ae-90a3-7d8c898c6d5d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "14a3abd1-f451-4a7a-a322-639efa355cb9",
                            Email = "sophialee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "222-333-4444",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "297e0e67-e77b-4395-b3b8-6ca67892dbde",
                            TwoFactorEnabled = false,
                            CardNumber = 1234554321098765m,
                            City = "Seoul",
                            Country = "Serbia",
                            ExpireDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sophia",
                            LastName = "Lee",
                            MidName = "K",
                            NameOnCard = "Sophia K Lee",
                            Role = "User",
                            Street = "456 Cedar St"
                        },
                        new
                        {
                            Id = "b6a76b15-33e5-4d26-98b9-c948c7823b84",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "31a6d716-121d-4c8e-b78e-0de067b47ad1",
                            Email = "danielmartinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "555-666-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4538de25-7cfd-436b-938e-2a6fc918ee5c",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543210012345m,
                            City = "Madrid",
                            Country = "Spain",
                            ExpireDate = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Daniel",
                            LastName = "Martinez",
                            MidName = "T",
                            NameOnCard = "Daniel T Martinez",
                            Role = "User",
                            Street = "789 Walnut Ave"
                        },
                        new
                        {
                            Id = "0e67a2e5-df53-4a92-9854-8e1ad46a4e61",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "42c922af-7c43-4aac-a338-8ec8378e51f0",
                            Email = "oliviabrown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "888-777-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "28f519a0-c6f7-45d0-8875-37085111e8b1",
                            TwoFactorEnabled = false,
                            CardNumber = 5432101234567890m,
                            City = "Paris",
                            Country = "France",
                            ExpireDate = new DateTime(2022, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olivia",
                            LastName = "Brown",
                            MidName = "N",
                            NameOnCard = "Olivia N Brown",
                            Role = "User",
                            Street = "123 Cherry St"
                        },
                        new
                        {
                            Id = "74f5b2b3-3d10-4a85-93b5-8c6d0c992b58",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7f9e8e52-564f-4776-b6dd-ce1ccb9ad7dd",
                            Email = "alexjohnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "417f696d-2f94-4ac6-a812-e5183711318d",
                            TwoFactorEnabled = false,
                            CardNumber = 5432167890123456m,
                            City = "Chicago",
                            Country = "Zimbabwe",
                            ExpireDate = new DateTime(2026, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alex",
                            LastName = "Johnson",
                            MidName = "S",
                            NameOnCard = " Alex S Johnson",
                            Role = "User",
                            Street = "789 Oak St"
                        },
                        new
                        {
                            Id = "724587e6-9314-4fe6-9c3e-6fd612f50234",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "08325e61-dee6-4e59-85d3-a19334692818",
                            Email = "williamtaylor@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "111-222-3333",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "de07ea27-58bb-48bf-a262-4327381ee0f5",
                            TwoFactorEnabled = false,
                            CardNumber = 1234567812345678m,
                            City = "London",
                            Country = "Andorra",
                            ExpireDate = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "William",
                            LastName = "Taylor",
                            MidName = "G",
                            NameOnCard = "William G Taylor",
                            Role = "User",
                            Street = "123 Elm St"
                        },
                        new
                        {
                            Id = "234cdf89-12a3-45b6-789c-0123456789de",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8ccdb489-9dcd-4122-8d8c-34f56ea6e000",
                            Email = "emmajdavis@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "444-555-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f34e7602-6e73-4cb3-b53b-d697f7dc3fb7",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543298765432m,
                            City = "New York",
                            Country = "Bangladesh",
                            ExpireDate = new DateTime(2025, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emma",
                            LastName = "Davis",
                            MidName = "J",
                            NameOnCard = "Emma J Davis",
                            Role = "User",
                            Street = "456 Maple Ave"
                        },
                        new
                        {
                            Id = "6789abcd-ef01-2345-6789-abcd01234567",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f3bdee5b-8328-4017-9861-cfd15194516a",
                            Email = "liammwilson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-9999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "144cbfc4-d7db-4f1e-a25d-167e20537d33",
                            TwoFactorEnabled = false,
                            CardNumber = 1234987654321098m,
                            City = "Los Angeles",
                            Country = "Somalia",
                            ExpireDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Liam",
                            LastName = "Wilson",
                            MidName = "M",
                            NameOnCard = "Liam M Wilson",
                            Role = "User",
                            Street = "789 Oak St"
                        },
                        new
                        {
                            Id = "bcdef012-3456-789a-bcde-f01234567890",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "52314635-d512-481b-badb-11ba9697badb",
                            Email = "olivialthompson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-777-8888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2a0b54ed-95b4-4973-bfe1-41bbf11136a7",
                            TwoFactorEnabled = false,
                            CardNumber = 9876012345678901m,
                            City = "Sydney",
                            Country = "Australia",
                            ExpireDate = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olivia",
                            LastName = "Thompson",
                            MidName = "L",
                            NameOnCard = "Olivia L Thompson",
                            Role = "User",
                            Street = "123 Pine St"
                        },
                        new
                        {
                            Id = "2345cdef-0123-4567-89ab-cdef01234567",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c2f7a787-f1d7-41c1-beff-d8f236da146c",
                            Email = "noahajohnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "222-333-4444",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2346151a-f09a-4c80-a379-6f1392bcadb6",
                            TwoFactorEnabled = false,
                            CardNumber = 1234554321098765m,
                            City = "Seattle",
                            Country = "Kiribati",
                            ExpireDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Noah",
                            LastName = "Johnson",
                            MidName = "A",
                            NameOnCard = "Noah A Johnson",
                            Role = "User",
                            Street = "456 Cedar St"
                        },
                        new
                        {
                            Id = "8901def0-1234-5678-9abc-def012345678",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bce199d5-b948-48a7-89fa-2a789b7f4431",
                            Email = "avaklee@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "555-666-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bbada415-eb3c-4a30-97c2-5d8f1a7a24eb",
                            TwoFactorEnabled = false,
                            CardNumber = 9876543298765432m,
                            City = "San Francisco",
                            Country = "Uruguay",
                            ExpireDate = new DateTime(2025, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ava",
                            LastName = "Lee",
                            MidName = "K",
                            NameOnCard = "Ava K Lee",
                            Role = "User",
                            Street = "789 Walnut Ave"
                        },
                        new
                        {
                            Id = "23456789-01ab-cdef-0123-456789abcdef",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fec8af31-bffe-4afc-b2f6-1eed0ecc434e",
                            Email = "isabellatmartinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "888-777-6666",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "657cd449-d340-4912-91d2-cfebd75b7dd4",
                            TwoFactorEnabled = false,
                            CardNumber = 5432109876543210m,
                            City = "Madrid",
                            Country = "Spain",
                            ExpireDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Isabella",
                            LastName = "Martinez",
                            MidName = "T",
                            NameOnCard = "Isabella T Martinez",
                            Role = "User",
                            Street = "123 Cherry St"
                        },
                        new
                        {
                            Id = "def01234-5678-9abc-def0-123456789abc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cf7f1b85-7e09-43f2-9b73-9fb5211521dd",
                            Email = "sophianbrown@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "999-888-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "82816562-ef72-44b9-85aa-a362cea99cb9",
                            TwoFactorEnabled = false,
                            CardNumber = 1234567812345678m,
                            City = "Paris",
                            Country = "France",
                            ExpireDate = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sophia",
                            LastName = "Brown",
                            MidName = "N",
                            NameOnCard = "Sophia N Brown",
                            Role = "User",
                            Street = "456 Maple Ave"
                        },
                        new
                        {
                            Id = "456789ab-cdef-0123-4567-89abcdef0123",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6594633-f977-417c-a06a-013dabe3c325",
                            Email = "miasjohnson@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "777-888-9999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "63de93e3-4b74-47f2-9e4d-0054f180453c",
                            TwoFactorEnabled = false,
                            CardNumber = 5432167890123456m,
                            City = "Rome",
                            Country = "Italy",
                            ExpireDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mia",
                            LastName = "Johnson",
                            MidName = "S",
                            NameOnCard = "Mia S Johnson",
                            Role = "User",
                            Street = "789 Oak St"
                        },
                        new
                        {
                            Id = "56789abc-def0-1234-5678-9abcdef01234",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2656372a-51f9-481a-83b9-a589975239f2",
                            Email = "logantmartinez@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumber = "555-666-7777",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5c5b5bd5-0657-44e9-95dd-033492e6f0dd",
                            TwoFactorEnabled = false,
                            CardNumber = 1234987654321098m,
                            City = "Tokyo",
                            Country = "Japan",
                            ExpireDate = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Logan",
                            LastName = "Martinez",
                            MidName = "T",
                            NameOnCard = "Logan T Martinez",
                            Role = "User",
                            Street = "123 Walnut Ave"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("E_Commerce.DAL.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce.DAL.CartProduct", b =>
                {
                    b.HasOne("E_Commerce.DAL.Cart", "Cart")
                        .WithMany("Products")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.Category", b =>
                {
                    b.HasOne("E_Commerce.DAL.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("E_Commerce.DAL.CustomerReview", b =>
                {
                    b.HasOne("E_Commerce.DAL.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.Order", b =>
                {
                    b.HasOne("E_Commerce.DAL.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("E_Commerce.DAL.OrderProduct", b =>
                {
                    b.HasOne("E_Commerce.DAL.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.ProductColorSizeQuantity", b =>
                {
                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("Product_Color_Size_Quantity")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product_IMG", b =>
                {
                    b.HasOne("E_Commerce.DAL.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductWishList", b =>
                {
                    b.HasOne("E_Commerce.DAL.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce.DAL.WishList", null)
                        .WithMany()
                        .HasForeignKey("WishListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce.DAL.Customer", b =>
                {
                    b.HasOne("E_Commerce.DAL.Cart", "Cart")
                        .WithOne("Customer")
                        .HasForeignKey("E_Commerce.DAL.Customer", "CartID");

                    b.HasOne("E_Commerce.DAL.WishList", "WishList")
                        .WithOne("Customer")
                        .HasForeignKey("E_Commerce.DAL.Customer", "WishListID");

                    b.Navigation("Cart");

                    b.Navigation("WishList");
                });

            modelBuilder.Entity("E_Commerce.DAL.Cart", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_Commerce.DAL.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("E_Commerce.DAL.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("E_Commerce.DAL.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductOrders");

                    b.Navigation("Product_Color_Size_Quantity");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("E_Commerce.DAL.WishList", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce.DAL.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
